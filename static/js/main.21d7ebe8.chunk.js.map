{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js","components/TodoForm.module.css"],"names":["TodoForm","onSubmit","edit","useState","value","input","setInput","event","preventDefault","id","Math","floor","random","text","className","onChange","target","type","placeholder","styles","Todo","todos","completeTodo","updateTodo","removeTodo","setEdit","map","todo","idx","isComplete","onClick","TodoList","setTodos","test","newTodos","todoId","newValue","prev","item","updatedTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+LAoCeA,MAjCf,YAAuC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAAQ,EACVC,mBAASD,EAAOA,EAAKE,MAAQ,IADnB,mBAC7BC,EAD6B,KACtBC,EADsB,KAepC,OACE,uBAAML,SATa,SAACM,GACpBA,EAAMC,iBAEN,IAAMC,EAAKP,EAAOA,EAAKO,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5CX,EAAS,CAAEQ,KAAII,KAAMR,IACrBC,EAAS,KAIqBQ,UAAU,YAAxC,UACE,uBACEC,SAfe,SAACR,GACpBD,EAASC,EAAMS,OAAOZ,QAelBA,MAAOC,EACPY,KAAK,OACLC,YAAY,yEACZJ,UAAU,eAEXZ,EACC,wBAAQY,UAAWK,IAAO,aAA1B,uBAEA,wBAAQL,UAAWK,IAAO,aAA1B,0B,gBCCOC,MA1Bf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACrCrB,mBAAS,CAAEM,GAAI,KAAML,MAAO,KADS,mBACtDF,EADsD,KAChDuB,EADgD,KAQ7D,OAAIvB,EAAKO,GAAW,cAAC,EAAD,CAAUP,KAAMA,EAAMD,SALrB,SAACG,GACpBmB,EAAWrB,EAAKO,GAAIL,GACpBqB,EAAQ,CAAEhB,GAAI,KAAML,MAAO,QAKtBiB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEd,UAAWa,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKlB,KAApD,SACGkB,EAAKd,MADEc,EAAKlB,IAGf,gCACE,cAAC,IAAD,CAAmBqB,QAAS,kBAAMN,EAAWG,EAAKlB,OAClD,cAAC,IAAD,CAAQqB,QAAS,kBAAML,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAIL,MAAOuB,EAAKd,eAPvDe,OCkCIG,MAhDf,WAAqB,IAAD,EACQ5B,mBAAS,IADjB,mBACXkB,EADW,KACJW,EADI,KAkClB,OACE,qCACE,4CACA,cAAC,EAAD,CAAU/B,SAlCE,SAAC0B,GACf,GAAKA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAApC,CAEA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OA+BP,cAAC,EAAD,CACEb,MAAOA,EACPE,WA9Ba,SAACY,EAAQC,GACrBA,EAASvB,OAAQ,QAAQoB,KAAKG,EAASvB,OAE5CmB,GAAS,SAACK,GAAD,OACPA,EAAKX,KAAI,SAACY,GAAD,OAAWA,EAAK7B,KAAO0B,EAASC,EAAWE,SA2BlDhB,aAjBe,SAACb,GACpB,IAAI8B,EAAelB,EAAMK,KAAI,SAACC,GAG5B,OAFIA,EAAKlB,KAAOA,IAAIkB,EAAKE,YAAcF,EAAKE,YAErCF,KAGTK,EAASO,IAWLf,WAxBa,SAACf,GAClB,IAAM+B,EAAY,YAAInB,GAAOoB,QAAO,SAACd,GAAD,OAAUA,EAAKlB,KAAOA,KAE1DuB,EAASQ,UCfEE,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,YAAY,+B","file":"static/js/main.21d7ebe8.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styles from \"./TodoForm.module.css\";\n\nfunction TodoForm({ onSubmit, edit }) {\n  const [input, setInput] = useState(edit ? edit.value : \"\");\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const id = edit ? edit.id : Math.floor(Math.random() * 100000);\n    onSubmit({ id, text: input });\n    setInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      <input\n        onChange={handleChange}\n        value={input}\n        type=\"text\"\n        placeholder=\"오늘 할 일을 입력해주세요.\"\n        className=\"todo-input\"\n      />\n      {edit ? (\n        <button className={styles['todo-form']}>Edit Todo</button>\n      ) : (\n        <button className={styles['todo-form']}>add Todo</button>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, updateTodo, removeTodo }) {\n  const [edit, setEdit] = useState({ id: null, value: \"\" });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  if (edit.id) return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n\n  return todos.map((todo, idx) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={idx}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div>\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} />\n        <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) return;\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) return;\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) todo.isComplete = !todo.isComplete;\n\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>To-do List</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        updateTodo={updateTodo}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <>\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-form\":\"TodoForm_todo-form__3r37Z\"};"],"sourceRoot":""}