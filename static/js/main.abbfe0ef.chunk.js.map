{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","onSubmit","edit","useState","value","input","setInput","event","preventDefault","id","Math","floor","random","text","className","onChange","target","type","placeholder","Todo","todos","completeTodo","updateTodo","removeTodo","setEdit","map","todo","idx","isComplete","onClick","TodoList","JSON","parse","localStorage","getItem","setTodos","test","newTodos","setItem","stringify","todoId","newValue","updatedArr","updatedTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA+BeA,MA7Bf,YAAuC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAAQ,EACVC,mBAASD,EAAOA,EAAKE,MAAQ,IADnB,mBAC7BC,EAD6B,KACtBC,EADsB,KAepC,OACE,uBAAML,SATa,SAACM,GACpBA,EAAMC,iBAEN,IAAMC,EAAKP,EAAOA,EAAKO,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5CX,EAAS,CAAEQ,KAAII,KAAMR,IACrBC,EAAS,KAIqBQ,UAAU,YAAxC,UACE,uBACEC,SAfe,SAACR,GACpBD,EAASC,EAAMS,OAAOZ,QAelBA,MAAOC,EACPY,KAAK,OACLC,YAAY,yEACZJ,UAAU,eAEXZ,EAAO,wBAAQY,UAAU,gBAAlB,uBAAuD,wBAAQA,UAAU,WAAlB,0B,eCWtDK,MAhCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACrCpB,mBAAS,CAAEM,GAAI,KAAML,MAAO,KADS,mBACtDF,EADsD,KAChDsB,EADgD,KAQ7D,OAAItB,EAAKO,GAAW,cAAC,EAAD,CAAUP,KAAMA,EAAMD,SALrB,SAACG,GACpBkB,EAAWpB,EAAKO,GAAIL,GACpBoB,EAAQ,CAAEf,GAAI,KAAML,MAAO,QAKtBgB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEb,UAAWY,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKK,UAAU,QAAf,UACE,cAAC,IAAD,CACEA,UAAU,cACVe,QAAS,kBAAMN,EAAWG,EAAKjB,OAEjC,cAAC,IAAD,CACEK,UAAU,YACVe,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAIL,MAAOsB,EAAKb,eAZjDc,OC0CIG,MAxDf,WAAqB,IAAD,EACQ3B,mBACxB4B,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAFlC,mBACXd,EADW,KACJe,EADI,KA0ClB,OACE,qCACE,4CACA,cAAC,EAAD,CAAUlC,SAxCE,SAACyB,GACf,GAAKA,EAAKb,OAAQ,QAAQuB,KAAKV,EAAKb,MAApC,CAEA,IAAMwB,EAAQ,CAAIX,GAAJ,mBAAaN,IAC3Ba,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUF,IAClDF,EAASE,OAoCP,cAAC,EAAD,CACEjB,MAAOA,EACPE,WAnCa,SAACkB,EAAQC,GAC1B,GAAKA,EAAS5B,OAAQ,QAAQuB,KAAKK,EAAS5B,MAA5C,CAEA,IAAM6B,EAAa,YAAItB,GAAOK,KAAI,SAACC,GAAD,OAChCA,EAAKjB,KAAO+B,EAASC,EAAWf,KAGlCO,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUG,IAClDP,EAASO,KA4BLrB,aAlBe,SAACZ,GACpB,IAAIkC,EAAevB,EAAMK,KAAI,SAACC,GAG5B,OAFIA,EAAKjB,KAAOA,IAAIiB,EAAKE,YAAcF,EAAKE,YAErCF,KAGTO,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUI,IAClDR,EAASQ,IAWLpB,WA1Ba,SAACd,GAClB,IAAMmC,EAAY,YAAIxB,GAAOyB,QAAO,SAACnB,GAAD,OAAUA,EAAKjB,KAAOA,KAE1DwB,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUK,IAClDT,EAASS,UCtBEE,MARf,WACE,OACE,qBAAKhC,UAAU,WAAf,SACE,cAAC,EAAD,O,MCANiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.abbfe0ef.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction TodoForm({ onSubmit, edit }) {\n  const [input, setInput] = useState(edit ? edit.value : \"\");\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const id = edit ? edit.id : Math.floor(Math.random() * 100000);\n    onSubmit({ id, text: input });\n    setInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      <input\n        onChange={handleChange}\n        value={input}\n        type=\"text\"\n        placeholder=\"오늘 할 일을 입력해주세요.\"\n        className=\"todo-input\"\n      />\n      {edit ? <button className=\"todo-btn edit\">Edit Todo</button> : <button className=\"todo-btn\">add Todo</button>}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, updateTodo, removeTodo }) {\n  const [edit, setEdit] = useState({ id: null, value: \"\" });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  if (edit.id) return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n\n  return todos.map((todo, idx) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={idx}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          className=\"delete-icon\"\n          onClick={() => removeTodo(todo.id)}\n        />\n        <TiEdit\n          className=\"edit-icon\"\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"to-do-list\")) || []\n  );\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) return;\n\n    const newTodos = [todo, ...todos];\n    localStorage.setItem(\"to-do-list\", JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) return;\n\n    const updatedArr = [...todos].map((todo) =>\n      todo.id === todoId ? newValue : todo\n    );\n\n    localStorage.setItem(\"to-do-list\", JSON.stringify(updatedArr));\n    setTodos(updatedArr);\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n\n    localStorage.setItem(\"to-do-list\", JSON.stringify(removeArr));\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) todo.isComplete = !todo.isComplete;\n\n      return todo;\n    });\n\n    localStorage.setItem(\"to-do-list\", JSON.stringify(updatedTodos));\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>To-do List</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        updateTodo={updateTodo}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}